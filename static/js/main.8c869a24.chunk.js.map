{"version":3,"sources":["components/Header.js","components/Search.js","components/FormInfo.js","components/Items.js","data.js","components/Card.js","components/Main.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","href","Search","useState","hidden","setHidden","inputText","setInputText","className","onChange","event","newValue","target","value","length","type","placeholder","id","FormInfo","Items","img","price","alt","beds","baths","sqft","address","city","zipcode","console","log","src","process","houses","imgCard","zipCode","Card","map","house","key","Main","Fragment","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c869a24.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header(){\r\n    return(\r\n        <nav>\r\n            <ul>\r\n                <li><a href=\"#\">Home</a></li>\r\n                <li><a href=\"#\">About</a></li>\r\n                <li><a href=\"#\">Contact</a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\n\r\nconst Search = () => {\r\n  const [hidden, setHidden] = useState(false);\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const newValue = event.target.value;\r\n    setInputText(newValue);\r\n\r\n    if (inputText.length > 1) {\r\n      setHidden(true);\r\n      // console.log(inputText.length)\r\n    } else {\r\n      setHidden(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <i className=\"fa fa-search fa-2x\"></i>\r\n        <label>\r\n          <input className=\"search-house\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            value={inputText}\r\n          />\r\n          {hidden ? <i id=\"closeIcon\" className=\"fa fa-close fa-2x\"></i> : \"\"}\r\n        </label>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst FormInfo = () => {\r\n  return (\r\n    <div className=\"form-info\">\r\n      <button>\r\n        <i className=\"fa fa-info-circle fa-1x\"></i>REQUEST INFO\r\n      </button>\r\n      <button>DETAILS ></button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInfo;\r\n","import React from \"react\";\r\nimport FormInfo from \"./FormInfo\";\r\n\r\nfunction Items({ img, alt, price, beds, baths, sqft, address, city, zipcode }) {\r\n  console.log('Image' + price)\r\n  return (\r\n    <div className=\"items-card\">\r\n      <img src={process.env.PUBLIC_URL + img} className=\"img-card\" alt=\"House\" />\r\n      <div className=\"card-title\">\r\n        <p className=\"price\">{price}</p>\r\n        <p className=\"subtitle\">\r\n          <span> {beds}</span> bds\r\n          <span>{baths}</span> ba\r\n          <span>{sqft} </span> sqft\r\n        </p>\r\n      </div>\r\n      <p className=\"card-description\">\r\n        {address} {city} {zipcode}\r\n      </p>\r\n      <FormInfo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Items;\r\n","export const houses = [\r\n  {\r\n    id: 1,\r\n    imgCard: \"/images/house.jpg\",\r\n    alt: \"house\",\r\n    price: \"$459,000\",\r\n    beds: \"2\",\r\n    baths: \"2\",\r\n    sqft: \"1,000\",\r\n    address: \"1000 Downton St\",\r\n    city: \"Las Vegas, NV\",\r\n    zipCode: \"78750\",\r\n  },\r\n  {\r\n    id: 2,\r\n    imgCard: \"/images/house.jpg\",\r\n    alt: \"house\",\r\n    price: \"$300,000\",\r\n    beds: \"2\",\r\n    baths: \"2\",\r\n    sqft: \"1,000\",\r\n    address: \"1000 Downton St\",\r\n    city: \"Las Vegas, NV\",\r\n    zipCode: \"78750\",\r\n  },\r\n  {\r\n    id: 3,\r\n    imgCard: \"/images/house.jpg\",\r\n    alt: \"house\",\r\n    price: \"$1,259,000\",\r\n    beds: \"2\",\r\n    baths: \"2\",\r\n    sqft: \"1,000\",\r\n    address: \"1000 Downton St\",\r\n    city: \"Austin, TX\",\r\n    zipCode: \"78750\",\r\n  },\r\n  {\r\n    id: 4,\r\n    imgCard: \"/images/house.jpg\",\r\n    alt: \"house\",\r\n    price: \"$259,000\",\r\n    beds: \"2\",\r\n    baths: \"2\",\r\n    sqft: \"1,000\",\r\n    address: \"1000 Downton St\",\r\n    city: \"Austin, TX\",\r\n    zipCode: \"78750\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Items from \"./Items\";\r\nimport { houses } from \"../data\";\r\n\r\nfunction Card() {\r\n  return (\r\n    <div className=\"card\">\r\n      {houses.map((house) => (\r\n        <Items\r\n          key={house.id}\r\n          img={house.imgCard}\r\n          alt={house.alt}\r\n          price={house.price}\r\n          beds={house.beds}\r\n          baths={house.baths}\r\n          sqft={house.sqft}\r\n          address={house.address}\r\n          city={house.city}\r\n          zipcode={house.zipcode}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport Card from \"./Card\";\r\n// import Background from './images/lasvegas.jpg';\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nfunction Main() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"main\" >\r\n        <h1 className=\"title\">Marlon Jay Manuel</h1>\r\n        <Search />\r\n      </div>\r\n      <Card />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <span>&copy; Marlon Jay Manuel</span>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Main from './components/Main';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Header />\r\n      <Main />\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}